<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
	                    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	                    http://www.springframework.org/schema/aop
	                    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	                    http://www.springframework.org/schema/context
	                    http://www.springframework.org/schema/context/spring-context-3.2.xsd
                        http://www.springframework.org/schema/tx
	                    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
	<!-- spring能整合mybatis,是因为spring通过IOC将mybatis涉及到的对象定义在spring容器中 -->
	<!-- 通过XXXMapper.xml映射文件整合 -->
	<!-- 读取数据库连接信息 property-placeholder:占位符 location:属性文件的位置 -->
	<context:property-placeholder location="classpath:db.properties"></context:property-placeholder>
	<!-- 配置数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${driver}"></property>
		<property name="url" value="${url}"></property>
		<property name="username" value="${user}"></property>
		<property name="password" value="${password}"></property>
	</bean>
	<bean id="log4j" class="org.apache.ibatis.session.Configuration">
		<property name="logImpl" value="org.apache.ibatis.logging.log4j.Log4jImpl"></property>
	</bean>
	<!-- 配置SqlSessionFactory对象,并交给spring管理 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="typeAliasesPackage" value="cn.kgc.exam.pojo"></property>
		<property name="mapperLocations" value="classpath:cn/kgc/exam/mapper/*.xml"></property>
		<property name="configuration" ref="log4j"></property>
		<!--配置分页插件  -->
		  <property name="plugins">
                <array>
                  <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                      <!--使用下面的方式配置参数，一行配置一个 -->
                      <value>
                           reasonable=true
                      </value>
                    </property>
                  </bean>
                </array>
              </property>
	</bean>

	<!-- 配置SqlSession的bean -->

	<!-- 生成指定接口类型的Mapper动态代理类,同时会将SqlSessionTemplate实例注入给动态代码类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cn.kgc.exam.mapper"></property>
	</bean>
	<!-- 自动扫描注解的类 -->
	<context:component-scan base-package="cn.kgc.exam.service"></context:component-scan>


	<!--  事务管理的bean-->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!--	设置事务支持注解-->
<!--	<tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>-->
	<!-- 配置事务管理规则-->
		<tx:advice id="advice" transaction-manager="transactionManager">
			<tx:attributes>
				<tx:method name="get*" propagation="SUPPORTS"></tx:method>
				<tx:method name="list*" propagation="SUPPORTS"></tx:method>
				<tx:method name="add*" propagation="REQUIRED"></tx:method>
				<tx:method name="insert*" propagation="REQUIRED"></tx:method>
				<tx:method name="delete*" propagation="REQUIRED"></tx:method>
				<tx:method name="update*" propagation="REQUIRED"></tx:method>
				<tx:method name="*" propagation="REQUIRED"></tx:method>
			</tx:attributes>
		</tx:advice>

<!--		配置事务的增强-->
		<aop:config>
			<aop:pointcut id="p" expression="execution(* cn.kgc.exam.service..*.*(..))"/>
			<aop:advisor advice-ref="advice" pointcut-ref="p"></aop:advisor>
		</aop:config>

</beans>